/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(1)                                                       */
/* BINDTOOL_USE_PYGCCXML(1)                                                        */
/* BINDTOOL_HEADER_FILE(phase_code.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(eaf3152f5feb26abfea45fe0f1d7fdd9)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/plasma/phase_code.h>
// pydoc.h is automatically generated in the build directory
#include <phase_code_pydoc.h>

void bind_phase_code(py::module& m)
{

    using PhaseCode = ::gr::plasma::PhaseCode;

    py::class_<PhaseCode, std::shared_ptr<PhaseCode>> phase_code_class(m, "PhaseCode");


    py::enum_<gr::plasma::PhaseCode::Code>(phase_code_class, "Code")
        .value("BARKER", gr::plasma::PhaseCode::BARKER)
        .value("FRANK", gr::plasma::PhaseCode::FRANK)
        .value("P4", gr::plasma::PhaseCode::P4)
        .value("GENERIC", gr::plasma::PhaseCode::GENERIC)   // 999
        .export_values();

    phase_code_class.def_static("generate_code",
                    &PhaseCode::generate_code,
                    py::arg("type"),
                    py::arg("n"),
                    D(PhaseCode, generate_code));
    py::implicitly_convertible<int, gr::plasma::PhaseCode::Code>();
}
