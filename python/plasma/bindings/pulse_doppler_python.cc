/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pulse_doppler.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7710cdbb5d8d78265196704d9fbfafd3)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/plasma/pulse_doppler.h>
// pydoc.h is automatically generated in the build directory
#include <pulse_doppler_pydoc.h>

void bind_pulse_doppler(py::module& m)
{

    using pulse_doppler = ::gr::plasma::pulse_doppler;


    py::class_<pulse_doppler, gr::block, gr::basic_block, std::shared_ptr<pulse_doppler>>(
        m, "pulse_doppler", D(pulse_doppler))

        .def(py::init(&pulse_doppler::make),
             py::arg("num_pulse_cpi"),
             py::arg("doppler_fft_size"),
             D(pulse_doppler, make))


        .def("set_msg_queue_depth",
             &pulse_doppler::set_msg_queue_depth,
             py::arg("depth"),
             D(pulse_doppler, set_msg_queue_depth))


        .def("set_backend",
             &pulse_doppler::set_backend,
             py::arg("arg0"),
             D(pulse_doppler, set_backend))

        ;
}
