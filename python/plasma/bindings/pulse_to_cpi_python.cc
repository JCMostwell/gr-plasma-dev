/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pulse_to_cpi.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0d94c4fd9ee8007b413a1fc98b134a61)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/plasma/pulse_to_cpi.h>
// pydoc.h is automatically generated in the build directory
#include <pulse_to_cpi_pydoc.h>

void bind_pulse_to_cpi(py::module& m)
{

    using pulse_to_cpi = ::gr::plasma::pulse_to_cpi;


    py::class_<pulse_to_cpi, gr::block, gr::basic_block, std::shared_ptr<pulse_to_cpi>>(
        m, "pulse_to_cpi", D(pulse_to_cpi))

        .def(py::init(&pulse_to_cpi::make), py::arg("n_pulse_cpi"), D(pulse_to_cpi, make))


        .def("init_meta_dict",
             &pulse_to_cpi::init_meta_dict,
             py::arg("n_pulse_cpi_key"),
             D(pulse_to_cpi, init_meta_dict))

        ;
}
