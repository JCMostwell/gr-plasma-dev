id: plasma_usrp_radar
label: "UHD: USRP Radar"
category: "[plasma]"

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
  - id: samp_rate
    label: Sample Rate
    dtype: float
    default: "samp_rate"
  - id: tx_gain
    label: Tx Gain (dB)
    dtype: float
    default: 0
  - id: rx_gain
    label: Rx Gain (dB)
    dtype: float
    default: 0
  - id: tx_freq
    label: Tx Center Frequency
    dtype: float
    default: "center_freq"
  - id: rx_freq
    label: Rx Center Frequency
    dtype: float
    default: "center_freq"
  - id: start_time
    label: Start Time
    dtype: float
    default: 0.2
  - id: args
    label: Device Arguments
    dtype: string
    default: '"num_send_frames=512,num_recv_frames=512"'
    hide: ${ ('part' if args == "" else 'none') }
  - id: cal_file
    label: Calibration file
    dtype: file_save
    default: '""'
    hide: part
  - id: tx_priority
    label: Tx Thread Priority
    dtype: float
    options: [0.0, 1.0]
    option_labels: ["Normal", "High"]
    default: 0.0
    hide: ${ ('part' if tx_priority == 0 else 'none') }
  - id: rx_priority
    label: Rx Thread Priority
    dtype: float
    options: [0.0, 1.0]
    option_labels: ["Normal", "High"]
    default: 0.0
    hide: ${ ('part' if rx_priority == 0 else 'none') }
  # Metadata keys
  - id: center_freq_key
    label: Center frequency key
    dtype: string
    default: core:frequency
    hide: part
    category: Metadata
  - id: sample_start_key
    label: Sample start key
    dtype: string
    default: core:sample_start
    hide: part
    category: Metadata

inputs:
  - id: in
    domain: message

outputs:
  - id: out
    domain: message
    optional: true

templates:
  imports: from gnuradio import plasma
  make: |-
    plasma.usrp_radar(${args})
    self.${id}.set_metadata_keys(${center_freq_key}, ${sample_start_key})
    self.${id}.set_samp_rate(${samp_rate})
    self.${id}.set_tx_gain(${tx_gain})
    self.${id}.set_rx_gain(${rx_gain})
    self.${id}.set_tx_freq(${tx_freq})
    self.${id}.set_rx_freq(${rx_freq})
    self.${id}.set_start_time(${start_time})
    self.${id}.set_tx_thread_priority(${tx_priority})
    self.${id}.set_rx_thread_priority(${rx_priority})
    self.${id}.read_calibration_file(${cal_file})
    

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
